apiVersion: v1
kind: ConfigMap
metadata:
  name: windows11-autounattend
data:
  autounattend.xml: |
    <?xml version="1.0" encoding="utf-8"?>
    <unattend xmlns="urn:schemas-microsoft-com:unattend" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State">
      <settings pass="windowsPE">
        <component name="Microsoft-Windows-International-Core-WinPE" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
          <SetupUILanguage>
            <UILanguage>en-US</UILanguage>
          </SetupUILanguage>
          <InputLocale>0409:00000409</InputLocale>
          <SystemLocale>en-US</SystemLocale>
          <UILanguage>en-US</UILanguage>
          <UserLocale>en-US</UserLocale>
        </component>
        <component name="Microsoft-Windows-PnpCustomizationsWinPE" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
          <DriverPaths>
            <PathAndCredentials wcm:action="add" wcm:keyValue="1">
              <Path>E:\viostor\w11\amd64</Path>
            </PathAndCredentials>
          </DriverPaths>
        </component>
        <component name="Microsoft-Windows-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
          <DiskConfiguration>
            <WillShowUI>Never</WillShowUI>
            <Disk wcm:action="add">
              <!-- https://foxpa.ws/win-10-11-unattended -->
              <!-- https://learn.microsoft.com/en-us/windows-hardware/manufacture/desktop/configure-uefigpt-based-hard-drive-partitions?view=windows-11 -->
              <CreatePartitions>
                  <CreatePartition wcm:action="add">
                      <Order>1</Order>
                      <Type>Primary</Type>
                      <Size>300</Size>
                  </CreatePartition>
                  <CreatePartition wcm:action="add">
                      <Order>2</Order>
                      <Type>EFI</Type>
                      <Size>100</Size>
                  </CreatePartition>
                  <CreatePartition wcm:action="add">
                      <Order>3</Order>
                      <Type>MSR</Type>
                      <Size>128</Size>
                  </CreatePartition>
                  <CreatePartition wcm:action="add">
                      <Order>4</Order>
                      <Type>Primary</Type>
                      <Extend>true</Extend>
                  </CreatePartition>
              </CreatePartitions>
              <ModifyPartitions>
                <ModifyPartition wcm:action="add">
                    <Order>1</Order>
                    <PartitionID>1</PartitionID>
                    <Label>WINRE</Label>
                    <Format>NTFS</Format>
                    <!-- https://learn.microsoft.com/en-us/windows-hardware/customize/desktop/unattend/microsoft-windows-setup-diskconfiguration-disk-modifypartitions-modifypartition-typeid -->
                    <TypeID>DE94BBA4-06D1-4D40-A16A-BFD50179D6AC</TypeID>
                </ModifyPartition>
                <ModifyPartition wcm:action="add">
                    <Order>2</Order>
                    <PartitionID>2</PartitionID>
                    <Label>EFI</Label>
                    <Format>FAT32</Format>
                </ModifyPartition>
                <ModifyPartition wcm:action="add">
                    <Order>3</Order>
                    <PartitionID>3</PartitionID>
                </ModifyPartition>
                <ModifyPartition wcm:action="add">
                    <Order>4</Order>
                    <PartitionID>4</PartitionID>
                    <Label>Windows</Label>
                    <Letter>C</Letter>
                    <Format>NTFS</Format>
                </ModifyPartition>
              </ModifyPartitions>
              <DiskID>0</DiskID>
              <WillWipeDisk>true</WillWipeDisk>
            </Disk>
          </DiskConfiguration>
          <ImageInstall>
            <OSImage>
              <InstallFrom>
                <MetaData wcm:action="add">
                  <Key>/Image/Description</Key>
                  <Value>Windows 11 Pro</Value>
                </MetaData>
              </InstallFrom>
              <InstallTo>
                <DiskID>0</DiskID>
                <PartitionID>4</PartitionID>
              </InstallTo>
            </OSImage>
          </ImageInstall>
          <UserData>
            <AcceptEula>true</AcceptEula>
            <ProductKey>
              <Key/>
            </ProductKey>
          </UserData>
        </component>
      </settings>
      <settings pass="specialize">
        <component name="Microsoft-Windows-International-Core" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
          <InputLocale>0409:00000409</InputLocale>
          <SystemLocale>en-US</SystemLocale>
          <UILanguage>en-US</UILanguage>
          <UserLocale>en-US</UserLocale>
        </component>
      </settings>
      <settings pass="oobeSystem">
        <component name="Microsoft-Windows-Deployment" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
          <Reseal>
            <Mode>Audit</Mode>
          </Reseal>
        </component>
      </settings>
      <settings pass="auditUser">
        <component name="Microsoft-Windows-Deployment" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
          <RunSynchronous>
            <RunSynchronousCommand wcm:action="add">
              <Order>1</Order>
              <Path>PowerShell -ExecutionPolicy Bypass -NoProfile F:\post-install.ps1</Path>
              <Description>Run post-install script</Description>
            </RunSynchronousCommand>
          </RunSynchronous>
          <Generalize>
            <ForceShutdownNow>true</ForceShutdownNow>
            <Mode>OOBE</Mode>
          </Generalize>
        </component>
      </settings>
    </unattend>
  post-install.ps1: |
    # Install virtio guest drivers
    # ADDLOCAL is specified to workaround a bug in virtio-win-0.1.217.iso
    # See:
    #   - https://github.com/virtio-win/virtio-win-guest-tools-installer/issues/33
    #   - https://github.com/virtio-win/virtio-win-pkg-scripts/issues/60
    Start-Process msiexec -Wait -ArgumentList "/i E:\virtio-win-gt-x64.msi /qn /passive /norestart ADDLOCAL=FE_balloon_driver,FE_network_driver,FE_vioinput_driver,FE_viorng_driver,FE_vioscsi_driver,FE_vioserial_driver,FE_viostor_driver,FE_viofs_driver,FE_viogpudo_driver"

    # Install qemu guest agent
    Start-Process msiexec -Wait -ArgumentList "/i E:\guest-agent\qemu-ga-x86_64.msi /qn /passive /norestart"

    # Rename cached unattend.xml to avoid it is picked up by sysprep
    mv C:\Windows\Panther\unattend.xml C:\Windows\Panther\unattend.install.xml

    # Eject CD, to avoid that the unattend.xml on the CD is picked up by sysprep
    (New-Object -COMObject Shell.Application).NameSpace(17).ParseName("F:").InvokeVerb("Eject")
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: windows-efi-installer
spec:
  params:
    - name: winImageDownloadURL
      description: Download URL to Windows 11 or server 2022 installation ISO (English United States x64 version is needed). You can follow https://www.microsoft.com/en-us/software-download/windows11 or https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2022 to get one.
      type: string
    - name: autounattendConfigMapName
      description: Name of the ConfigMap containing the sysprep configuration files (autounattend.xml, etc.). For example windows11-autounattend or windows2022-autounattend. It is possible to provide customize ConfigMaps created by the user too.
      type: string
      default: windows11-autounattend
    - name: virtioContainerDiskName
      description: Reference to the containerdisk containing the virtio-win drivers ISO.
      type: string
      default: quay.io/kubevirt/virtio-container-disk:v0.59.0-rc.0
  tasks:
    - name: create-source-dv
      params:
        - name: manifest
          value: |
            apiVersion: cdi.kubevirt.io/v1beta1
            kind: DataVolume
            metadata:
              generateName: windows11-source-
            spec:
              storage:
                resources:
                  requests:
                    storage: 9Gi
              source:
                http:
                  url: $(params.winImageDownloadURL)
      timeout: 10m
      taskRef:
        kind: ClusterTask
        name: modify-data-object
    - name: modify-windows-iso-file
      params:
        - name: pvcName
          value: $(tasks.create-source-dv.results.name)
      runAfter:
        - create-source-dv
      taskRef:
        kind: ClusterTask
        name: modify-windows-iso-file
    - name: create-base-dv
      params:
        - name: manifest
          value: |
            apiVersion: cdi.kubevirt.io/v1beta1
            kind: DataVolume
            metadata:
              generateName: windows11-base-
            spec:
              storage:
                resources:
                  requests:
                    storage: 20Gi
              source:
                blank: {}
      timeout: 10m
      taskRef:
        kind: ClusterTask
        name: modify-data-object
    - name: create-vm-from-manifest
      params:
        - name: manifest
          value: |
            apiVersion: kubevirt.io/v1
            kind: VirtualMachine
            metadata:
              generateName: windows11-installer-
              labels:
                app: windows11-installer
            spec:
              running: false
              template:
                metadata:
                  annotations:
                    vm.kubevirt.io/os: windows11
                  labels:
                    kubevirt.io/domain: windows11-installer
              domain:
                clock:
                  utc: {}
                  timer:
                    hpet:
                      present: false
                    pit:
                      tickPolicy: delay
                    rtc:
                      tickPolicy: catchup
                    hyperv: {}
                cpu:
                  sockets: 2
                  cores: 2
                  threads: 1
                resources:
                  requests:
                    memory: 8Gi
                features:
                  acpi: {}
                  apic: {}
                  smm: {}
                  hyperv:
                    relaxed: {}
                    vapic: {}
                    vpindex: {}
                    spinlocks:
                      spinlocks: 8191
                    synic: {}
                    synictimer:
                      direct: {}
                    tlbflush: {}
                    frequencies: {}
                    reenlightenment: {}
                    ipi: {}
                    runtime: {}
                    reset: {}
                firmware:
                  bootloader:
                    efi:
                      secureBoot: true
                devices:
                  disks:
                    - name: installcdrom
                      cdrom:
                        bus: sata
                      bootOrder: 2
                    - name: rootdisk
                      disk:
                        bus: virtio
                      bootOrder: 1
                    - name: virtiocontainerdisk
                      cdrom:
                        bus: sata
                    - name: sysprep
                      cdrom:
                        bus: sata
                  interfaces:
                    - masquerade: {}
                      model: e1000e
                      name: default
                  inputs:
                    - type: tablet
                      bus: usb
                      name: tablet
                  tpm: {}
              terminationGracePeriodSeconds: 0
              volumes:
                - name: installcdrom
                - name: rootdisk
                - name: virtiocontainerdisk
                  containerDisk:
                    image: $(params.virtioContainerDiskName)
                - name: sysprep
                  sysprep:
                    configMap:
                      name: $(params.autounattendConfigMapName)
              networks:
                - name: default
                  pod: {}
        - name: ownDataVolumes
          value:
            - "installcdrom: $(tasks.create-source-dv.results.name)"
        - name: dataVolumes
          value:
            - "rootdisk: $(tasks.create-base-dv.results.name)"
        - name: runStrategy
          value: RerunOnFailure
        - name: startVM
          value: "true"
      runAfter:
        - modify-windows-iso-file
        - create-base-dv
      timeout: 10m
      taskRef:
        kind: ClusterTask
        name: create-vm-from-manifest
    - name: wait-for-vmi-status
      params:
        - name: vmiName
          value: $(tasks.create-vm-from-manifest.results.name)
        - name: successCondition
          value: status.phase == Succeeded
        - name: failureCondition
          value: status.phase in (Failed, Unknown)
      runAfter:
        - create-vm-from-manifest
      timeout: 2h
      taskRef:
        kind: ClusterTask
        name: wait-for-vmi-status
  finally:
    - name: cleanup-vm
      params:
        - name: vmName
          value: $(tasks.create-vm-from-manifest.results.name)
        - name: delete
          value: "true"
      timeout: 10m
      taskRef:
        kind: ClusterTask
        name: cleanup-vm
  results:
    - name: baseDvName
      description: Name of the created base DataVolume
      value: $(tasks.create-base-dv.results.name)
    - name: baseDvNamespace
      description: Namespace of the created base DataVolume
      value: $(tasks.create-base-dv.results.namespace)

