---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: windows-pipelines
roleRef:
  kind: ClusterRole
  name: windows-pipelines
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: pipeline
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: windows-pipelines
rules:
- apiGroups: ["kubevirt.io"]
  resources: ["virtualmachines/finalizers"]
  verbs: ["*"]
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: windows-bios-installer
spec:
  params:
    - name: winImageDownloadURL
      description: Download URL to Windows installation ISO (English United States x64 version is needed). You can follow https://www.microsoft.com/en-us/software-download/windows10ISO to get windows10 iso.
      type: string
    - name: autounattendConfigMapName
      description: Name of the ConfigMap containing the sysprep configuration files (autounattend.xml, etc.).
      type: string
      default: windows10-bios-autounattend
    - name: virtioContainerDiskName
      description: Reference to the containerdisk containing the virtio-win drivers ISO.
      type: string
      default: quay.io/kubevirt/virtio-container-disk:latest
  tasks:
    - name: create-source-dv
      params:
        - name: manifest
          value: |
            apiVersion: cdi.kubevirt.io/v1beta1
            kind: DataVolume
            metadata:
              generateName: windows-source-
            spec:
              storage:
                resources:
                  requests:
                    storage: 7Gi
              source:
                http:
                  url: $(params.winImageDownloadURL)
      timeout: 10m
      taskRef:
        kind: ClusterTask
        name: modify-data-object
    - name: create-base-dv
      params:
        - name: manifest
          value: |
            apiVersion: cdi.kubevirt.io/v1beta1
            kind: DataVolume
            metadata:
              generateName: windows-base-
            spec:
              storage:
                resources:
                  requests:
                    storage: 20Gi
              source:
                blank: {}
      timeout: 10m
      taskRef:
        kind: ClusterTask
        name: modify-data-object
    - name: create-vm-from-manifest
      params:
        - name: manifest
          value: |
            apiVersion: kubevirt.io/v1
            kind: VirtualMachine
            metadata:
              generateName: windows-installer-
              labels:
                app: windows-installer
            spec:
              running: false
              template:
                metadata:
                  annotations:
                    vm.kubevirt.io/os: windows
                  labels:
                    kubevirt.io/domain: windows-installer
                spec:
                  domain:
                    clock:
                      utc: {}
                      timer:
                        hpet:
                          present: false
                        pit:
                          tickPolicy: delay
                        rtc:
                          tickPolicy: catchup
                        hyperv: {}
                    cpu:
                      sockets: 2
                      cores: 1
                      threads: 1
                    resources:
                      requests:
                        memory: 8Gi
                    features:
                      acpi: {}
                      apic: {}
                      hyperv:
                        relaxed: {}
                        vapic: {}
                        vpindex: {}
                        spinlocks:
                          spinlocks: 8191
                        synic: {}
                        synictimer:
                          direct: {}
                        tlbflush: {}
                        frequencies: {}
                        reenlightenment: {}
                        ipi: {}
                        runtime: {}
                        reset: {}
                    devices:
                      disks:
                        - name: installcdrom
                          cdrom:
                            bus: sata
                          bootOrder: 1
                        - name: rootdisk
                          disk:
                            bus: virtio
                          bootOrder: 2
                        - name: virtiocontainerdisk
                          cdrom:
                            bus: sata
                        - name: sysprep
                          cdrom:
                            bus: sata
                      interfaces:
                        - masquerade: {}
                          model: e1000e
                          name: default
                      inputs:
                        - type: tablet
                          bus: usb
                          name: tablet
                  terminationGracePeriodSeconds: 3600
                  volumes:
                    - name: installcdrom
                    - name: rootdisk
                    - name: virtiocontainerdisk
                      containerDisk:
                        image: $(params.virtioContainerDiskName)
                    - name: sysprep
                      sysprep:
                        configMap:
                          name: $(params.autounattendConfigMapName)
                  networks:
                    - name: default
                      pod: {}
        - name: ownDataVolumes
          value:
            - "installcdrom: $(tasks.create-source-dv.results.name)"
        - name: dataVolumes
          value:
            - "rootdisk: $(tasks.create-base-dv.results.name)"
        - name: runStrategy
          value: RerunOnFailure
        - name: startVM
          value: "true"
      runAfter:
        - create-source-dv
        - create-base-dv
      timeout: 10m
      taskRef:
        kind: ClusterTask
        name: create-vm-from-manifest
    - name: wait-for-vmi-status
      params:
        - name: vmiName
          value: $(tasks.create-vm-from-manifest.results.name)
        - name: successCondition
          value: status.phase == Succeeded
        - name: failureCondition
          value: status.phase in (Failed, Unknown)
      runAfter:
        - create-vm-from-manifest
      timeout: 2h
      taskRef:
        kind: ClusterTask
        name: wait-for-vmi-status
  finally:
    - name: cleanup-vm
      params:
        - name: vmName
          value: $(tasks.create-vm-from-manifest.results.name)
        - name: delete
          value: "true"
      timeout: 10m
      taskRef:
        kind: ClusterTask
        name: cleanup-vm
  results:
    - name: baseDvName
      description: Name of the created base DataVolume
      value: $(tasks.create-base-dv.results.name)
    - name: baseDvNamespace
      description: Namespace of the created base DataVolume
      value: $(tasks.create-base-dv.results.namespace)
