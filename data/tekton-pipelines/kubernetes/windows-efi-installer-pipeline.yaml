---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: windows-efi-installer
spec:
  params:
    - name: winImageDownloadURL
      description: Download URL to Windows 11 or server 2022 installation ISO (English United States x64 version is needed). You can follow https://www.microsoft.com/en-us/software-download/windows11 or https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2022 to get one.
      type: string
    - name: autounattendConfigMapName
      description: Name of the ConfigMap containing the sysprep configuration files (autounattend.xml, etc.). For example windows11-autounattend or windows2022-autounattend. It is possible to provide customize ConfigMaps created by the user too.
      type: string
      default: windows11-autounattend
    - name: virtioContainerDiskName
      description: Reference to the containerdisk containing the virtio-win drivers ISO.
      type: string
      default: quay.io/kubevirt/virtio-container-disk:v0.59.0-rc.0
  tasks:
    - name: create-source-dv
      params:
        - name: manifest
          value: |
            apiVersion: cdi.kubevirt.io/v1beta1
            kind: DataVolume
            metadata:
              generateName: windows11-source-
            spec:
              storage:
                resources:
                  requests:
                    storage: 9Gi
              source:
                http:
                  url: $(params.winImageDownloadURL)
      timeout: 10m
      taskRef:
        kind: ClusterTask
        name: modify-data-object
    - name: modify-windows-iso-file
      params:
        - name: pvcName
          value: $(tasks.create-source-dv.results.name)
      runAfter:
        - create-source-dv
      taskRef:
        kind: ClusterTask
        name: modify-windows-iso-file
    - name: create-base-dv
      params:
        - name: manifest
          value: |
            apiVersion: cdi.kubevirt.io/v1beta1
            kind: DataVolume
            metadata:
              generateName: windows11-base-
            spec:
              storage:
                resources:
                  requests:
                    storage: 20Gi
              source:
                blank: {}
      timeout: 10m
      taskRef:
        kind: ClusterTask
        name: modify-data-object
    - name: create-vm-from-manifest
      params:
        - name: manifest
          value: |
            apiVersion: kubevirt.io/v1
            kind: VirtualMachine
            metadata:
              generateName: windows11-installer-
              labels:
                app: windows11-installer
            spec:
              running: false
              template:
                metadata:
                  annotations:
                    vm.kubevirt.io/os: windows11
                  labels:
                    kubevirt.io/domain: windows11-installer
              domain:
                clock:
                  utc: {}
                  timer:
                    hpet:
                      present: false
                    pit:
                      tickPolicy: delay
                    rtc:
                      tickPolicy: catchup
                    hyperv: {}
                cpu:
                  sockets: 2
                  cores: 2
                  threads: 1
                resources:
                  requests:
                    memory: 8Gi
                features:
                  acpi: {}
                  apic: {}
                  smm: {}
                  hyperv:
                    relaxed: {}
                    vapic: {}
                    vpindex: {}
                    spinlocks:
                      spinlocks: 8191
                    synic: {}
                    synictimer:
                      direct: {}
                    tlbflush: {}
                    frequencies: {}
                    reenlightenment: {}
                    ipi: {}
                    runtime: {}
                    reset: {}
                firmware:
                  bootloader:
                    efi:
                      secureBoot: true
                devices:
                  disks:
                    - name: installcdrom
                      cdrom:
                        bus: sata
                      bootOrder: 2
                    - name: rootdisk
                      disk:
                        bus: virtio
                      bootOrder: 1
                    - name: virtiocontainerdisk
                      cdrom:
                        bus: sata
                    - name: sysprep
                      cdrom:
                        bus: sata
                  interfaces:
                    - masquerade: {}
                      model: e1000e
                      name: default
                  inputs:
                    - type: tablet
                      bus: usb
                      name: tablet
                  tpm: {}
              terminationGracePeriodSeconds: 0
              volumes:
                - name: installcdrom
                - name: rootdisk
                - name: virtiocontainerdisk
                  containerDisk:
                    image: $(params.virtioContainerDiskName)
                - name: sysprep
                  sysprep:
                    configMap:
                      name: $(params.autounattendConfigMapName)
              networks:
                - name: default
                  pod: {}
        - name: ownDataVolumes
          value:
            - "installcdrom: $(tasks.create-source-dv.results.name)"
        - name: dataVolumes
          value:
            - "rootdisk: $(tasks.create-base-dv.results.name)"
        - name: runStrategy
          value: RerunOnFailure
        - name: startVM
          value: "true"
      runAfter:
        - modify-windows-iso-file
        - create-base-dv
      timeout: 10m
      taskRef:
        kind: ClusterTask
        name: create-vm-from-manifest
    - name: wait-for-vmi-status
      params:
        - name: vmiName
          value: $(tasks.create-vm-from-manifest.results.name)
        - name: successCondition
          value: status.phase == Succeeded
        - name: failureCondition
          value: status.phase in (Failed, Unknown)
      runAfter:
        - create-vm-from-manifest
      timeout: 2h
      taskRef:
        kind: ClusterTask
        name: wait-for-vmi-status
  finally:
    - name: cleanup-vm
      params:
        - name: vmName
          value: $(tasks.create-vm-from-manifest.results.name)
        - name: delete
          value: "true"
      timeout: 10m
      taskRef:
        kind: ClusterTask
        name: cleanup-vm
    - name: delete-imported-iso
      params:
        - name: deleteObject
          value: "true"
        - name: deleteObjectKind
          value: "PersistentVolumeClaim"
        - name: deleteObjectName
          value: "$(tasks.import-win-iso.results.name)"
        - name: namespace
          value: "$(tasks.import-win-iso.results.namespace)"
      taskRef:
        kind: ClusterTask
        name: modify-data-object
  results:
    - name: baseDvName
      description: Name of the created base DataVolume
      value: $(tasks.create-base-dv.results.name)
    - name: baseDvNamespace
      description: Namespace of the created base DataVolume
      value: $(tasks.create-base-dv.results.namespace)
